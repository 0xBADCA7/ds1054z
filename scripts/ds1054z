#!/usr/bin/env python

"""
CLI for the DS1054Z scope by Rigol
"""

import argparse
from builtins import input

from ds1054z import DS1054Z

SHELL_HOWTO = """
Enter a command. It will be sent to the DS1054Z.
If the command contains a question mark ('?'), the answer
will be read from the device.
Quit the shell with  'quit'  or by pressing Ctrl-C
"""

def comma_sep(s):
    return s.split(',')

def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('device', help='The device string. Typically its IP.')
    parser.add_argument('--verbose', action='store_true', help='More verbose output')
    parser.add_argument('--shell', action='store_true', help='Start an interactive shell')
    parser.add_argument('--properties', default=[], type=comma_sep,
        help='Query properties of the DS1054Z instance (separated by a comma)')
    args = parser.parse_args()

    ds = DS1054Z(args.device)

    for prop in args.properties:
        val = getattr(ds, prop)
        if args.verbose:
            print('{0}: {1}'.format(prop, val))
        else:
            print(val)

    if args.shell: run_shell(ds)

def run_shell(ds):
    """ ds : DS1054Z instance """
    print(SHELL_HOWTO)
    print('> *IDN?')
    print(ds.query("*IDN?"))
    try:
        while True:
            cmd = input('> ')
            cmd = cmd.strip()
            if cmd in ('quit', 'exit'):
                break
            if '?' in cmd:
                ret = ds.query_raw(cmd)
                try:
                    print(ret.decode('utf-8').strip())
                except UnicodeDecodeError:
                    print('binary message:', ret)
            else:
                ds.write(cmd)
    except KeyboardInterrupt as e:
        print('\nCtrl-C pressed.')
    except EOFError:
        pass
    print('Exiting...')

if __name__ == "__main__":
    main()

